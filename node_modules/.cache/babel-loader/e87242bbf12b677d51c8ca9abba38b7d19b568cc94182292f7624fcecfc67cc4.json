{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData } from '../../api/data.js';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'homePage',\n  data() {\n    return {\n      userImg: require('./../../assets/images/user.png'),\n      tableData: [{\n        name: 'oppo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'vivo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'apple',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '小米',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '三星',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }],\n      tableLabel: {\n        name: '課程',\n        todayBuy: '今日購買',\n        monthBuy: '本月購買',\n        totalBuy: '總共購買'\n      },\n      countData: [{\n        name: '今日支付訂單',\n        value: '1234',\n        icon: 'SuccessFilled',\n        color: '#2ec7c9'\n      }, {\n        name: '今日收藏訂單',\n        value: '210',\n        icon: 'StarFilled',\n        color: '#ffb980'\n      }, {\n        name: '今日未支付訂單',\n        value: '1234',\n        icon: 'GoodsFilled',\n        color: '#5ab1ef'\n      }, {\n        name: '本月支付訂單',\n        value: '1234',\n        icon: 'SuccessFilled',\n        color: '#2ec7c9'\n      }, {\n        name: '本月收藏訂單',\n        value: '210',\n        icon: 'StarFilled',\n        color: '#ffb980'\n      }, {\n        name: '本月未支付訂單',\n        value: '1234',\n        icon: 'GoodsFilled',\n        color: '#5ab1ef'\n      }]\n    };\n  },\n  mounted() {\n    getData().then(res => {\n      const {\n        code,\n        data\n      } = res.data;\n      if (code === 20000) {\n        this.tableData = data.tableData;\n        const order = data.orderData;\n        const xData = order.date;\n        const keyArray = Object.keys(order.data[0]);\n        const series = [];\n        keyArray.forEach(key => {\n          series.push({\n            name: key,\n            data: order.data.map(item => item[key]),\n            type: 'line'\n          });\n        });\n        const option = {\n          xAxis: {\n            data: xData\n          },\n          yAxis: {},\n          legend: {\n            data: keyArray\n          },\n          series\n        };\n        const E = echarts.init(this.$refs.echarts);\n        E.setOption(option);\n\n        //用戶圖\n        const userOption = {\n          legend: {\n            //圖例文字顏色\n            textStyle: {\n              color: \"#333\"\n            }\n          },\n          grid: {\n            left: \"20%\"\n          },\n          //提示框\n          tooltip: {\n            trigger: \"axis\"\n          },\n          xAxis: {\n            type: \"category\",\n            //類軸\n            data: data.userData.map(item => item.date),\n            axisLine: {\n              lineStyle: {\n                color: \"#17b3a3\"\n              }\n            },\n            axisLabel: {\n              interval: 0,\n              color: '#333'\n            }\n          },\n          yAxis: [{\n            type: \"value\",\n            axisLine: {\n              lineStyle: {\n                color: '#17b3a3'\n              }\n            }\n          }],\n          color: [\"#2ec7c9\", \"#b6a2de\"],\n          series: [{\n            name: '新增用戶',\n            data: data.userData.map(item => item.new),\n            type: 'bar'\n          }, {\n            name: '活躍用戶',\n            data: data.userData.map(item => item.active),\n            type: 'bar'\n          }]\n        };\n        const U = echarts.init(this.$refs.userEcharts);\n        U.setOption(userOption);\n      }\n      console.log(res);\n    });\n  }\n};","map":{"version":3,"names":["getData","echarts","name","data","userImg","require","tableData","todayBuy","monthBuy","totalBuy","tableLabel","countData","value","icon","color","mounted","then","res","code","order","orderData","xData","date","keyArray","Object","keys","series","forEach","key","push","map","item","type","option","xAxis","yAxis","legend","E","init","$refs","setOption","userOption","textStyle","grid","left","tooltip","trigger","userData","axisLine","lineStyle","axisLabel","interval","new","active","U","userEcharts","console","log"],"sources":["C:\\Users\\user\\Pictures\\vue-backstage\\src\\views\\home\\index.vue"],"sourcesContent":["<template>\r\n    <el-row class=\"home\" :gutter=\"20\">\r\n        <el-col :span=\"8\" style=\"margin-top: 20px\">\r\n            <el-card shadow=\"hover\">\r\n                <div class=\"user\">\r\n                    <img :src=\"userImg\" />\r\n                    <div class=\"userInfo\">\r\n                        <p class=\"name\">Admin</p>\r\n                        <p class=\"access\">超級管理員</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"login-info\">\r\n                    <p>上次登入的時間:<span>2023/12/01</span></p>\r\n                    <p>上次登入的地點:<span>台灣</span></p>\r\n                </div>\r\n            </el-card>\r\n            <el-card style=\"margin-top: 20px; height: 460px;\">\r\n                <el-table :data=\"tableData\">\r\n                    <el-table-column \r\n                    v-for=\"(val, index) in tableLabel\" \r\n                    :key=\"index\" \r\n                    :prop=\"index\"\r\n                    :label=\"val\">\r\n                    </el-table-column>\r\n                </el-table>\r\n            </el-card>\r\n        </el-col>\r\n        <el-col class=\"numList\" style=\"margin-top: 20px\" :span=\"16\">\r\n            <div class=\"num\">\r\n                <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{display: 'flex', padding: 0}\" class=\"numCard\">\r\n                    <div class=\"icon\" :style=\"{ background: item.color }\">\r\n                        <el-icon color=\"#fff\" size=\"30px\">\r\n                            <component :is=\"item.icon\"></component>\r\n                        </el-icon>\r\n                    </div>\r\n                    <div class=\"detail\">\r\n                        <p class=\"num\">¥{{ item.value }}</p>\r\n                        <p class=\"text\">{{ item.name }}</p>\r\n                    </div>\r\n                </el-card>\r\n            </div>\r\n            <el-card style=\"height: 280px\">\r\n                <div style=\"width: 100%; height: 280px; margin: 0 auto;\" ref=\"echarts\"></div>\r\n            </el-card>\r\n            <div class=\"graph\">\r\n                <el-card style=\"width: 48%; height: 260px\">\r\n                    <div style=\"height: 240px;\" ref=\"userEcharts\"></div>\r\n                </el-card>\r\n                <el-card style=\"width: 48%; height: 260px\"></el-card>\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n<script>\r\n    import { getData } from '../../api/data.js';\r\n    import * as echarts from 'echarts';\r\n    export default {\r\n        name: 'homePage',\r\n        data() {\r\n            return {\r\n                userImg: require('./../../assets/images/user.png'),\r\n                tableData: [\r\n                    {\r\n                        name: 'oppo',\r\n                        todayBuy: 100,\r\n                        monthBuy: 300,\r\n                        totalBuy: 800\r\n                    },\r\n                    {\r\n                        name: 'vivo',\r\n                        todayBuy: 100,\r\n                        monthBuy: 300,\r\n                        totalBuy: 800\r\n                    },\r\n                    {\r\n                        name: 'apple',\r\n                        todayBuy: 100,\r\n                        monthBuy: 300,\r\n                        totalBuy: 800\r\n                    },\r\n                    {\r\n                        name: '小米',\r\n                        todayBuy: 100,\r\n                        monthBuy: 300,\r\n                        totalBuy: 800\r\n                    },\r\n                    {\r\n                        name: '三星',\r\n                        todayBuy: 100,\r\n                        monthBuy: 300,\r\n                        totalBuy: 800\r\n                    }\r\n                ],\r\n                tableLabel : {\r\n                    name: '課程',\r\n                    todayBuy: '今日購買',\r\n                    monthBuy: '本月購買',\r\n                    totalBuy: '總共購買',\r\n                },\r\n                countData: [\r\n                    {\r\n                        name:'今日支付訂單',\r\n                        value: '1234',\r\n                        icon: 'SuccessFilled',\r\n                        color: '#2ec7c9',\r\n                    },\r\n                    {\r\n                        name:'今日收藏訂單',\r\n                        value: '210',\r\n                        icon: 'StarFilled',\r\n                        color: '#ffb980',\r\n                    },\r\n                    {\r\n                        name:'今日未支付訂單',\r\n                        value: '1234',\r\n                        icon: 'GoodsFilled',\r\n                        color: '#5ab1ef',\r\n                    },\r\n                    {\r\n                        name:'本月支付訂單',\r\n                        value: '1234',\r\n                        icon: 'SuccessFilled',\r\n                        color: '#2ec7c9',\r\n                    },\r\n                    {\r\n                        name:'本月收藏訂單',\r\n                        value: '210',\r\n                        icon: 'StarFilled',\r\n                        color: '#ffb980',\r\n                    },\r\n                    {\r\n                        name:'本月未支付訂單',\r\n                        value: '1234',\r\n                        icon: 'GoodsFilled',\r\n                        color: '#5ab1ef',\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            getData().then(res => {\r\n                const { code, data } = res.data;\r\n                if (code === 20000) {\r\n                    this.tableData = data.tableData;\r\n                    const order = data.orderData;\r\n                    const xData = order.date;\r\n                    const keyArray =  Object.keys(order.data[0]);\r\n                    const series = [];\r\n                    keyArray.forEach(key => {\r\n                        series.push({\r\n                            name: key,\r\n                            data: order.data.map(item => item[key]),\r\n                            type: 'line'\r\n                        })\r\n                    })\r\n                    const option = {\r\n                        xAxis: {\r\n                            data: xData,\r\n                        },\r\n                        yAxis: {},\r\n                        legend: {\r\n                            data: keyArray\r\n                        },\r\n                        series\r\n                    }\r\n\r\n                    const E = echarts.init(this.$refs.echarts);\r\n                    E.setOption(option);\r\n\r\n                    //用戶圖\r\n                    const userOption = {\r\n                        legend: {\r\n                            //圖例文字顏色\r\n                            textStyle: {\r\n                                color: \"#333\",\r\n                            },\r\n                        },\r\n                        grid: {\r\n                            left: \"20%\",\r\n                        },\r\n                        //提示框\r\n                        tooltip: {\r\n                            trigger: \"axis\",\r\n                        },\r\n                        xAxis: {\r\n                            type: \"category\", //類軸\r\n                            data: data.userData.map(item => item.date),\r\n                            axisLine: {\r\n                                lineStyle: {\r\n                                    color: \"#17b3a3\",\r\n                                },\r\n                            },\r\n                            axisLabel: {\r\n                                interval: 0,\r\n                                color: '#333',\r\n                            },\r\n                        },\r\n                        yAxis: [\r\n                            {\r\n                                type: \"value\",\r\n                                axisLine: {\r\n                                    lineStyle: {\r\n                                        color: '#17b3a3',\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                        color: [\"#2ec7c9\", \"#b6a2de\"],\r\n                        series: [\r\n                            {\r\n                                name: '新增用戶',\r\n                                data: data.userData.map(item => item.new),\r\n                                type: 'bar'\r\n                            },\r\n                            {\r\n                                name: '活躍用戶',\r\n                                data: data.userData.map(item => item.active),\r\n                                type: 'bar'\r\n                            }\r\n                        ],\r\n                    }\r\n                    const U = echarts.init(this.$refs.userEcharts);\r\n                    U.setOption(userOption);\r\n                }\r\n                console.log(res);\r\n            })\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n    .user {\r\n        display: flex;\r\n        align-items: center;\r\n        border-bottom: 1px solid lightgray;\r\n        padding: 0 0 20px;\r\n\r\n        img {\r\n            width: 150px;\r\n            height: 150px;\r\n            flex-shrink: 0;\r\n            margin: 0 20px 0 0;\r\n        }\r\n\r\n        .userInfo {\r\n            \r\n            p {\r\n                text-align: left;\r\n                white-space: nowrap;\r\n                margin: 0 0 5px ;\r\n\r\n                &.name {\r\n                    font-size: 22px;\r\n                }\r\n\r\n                &.access {\r\n                    color: gray;\r\n                    font-size: 14px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .login-info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        margin: 20px 0 0;\r\n\r\n        p {\r\n            color: gray;\r\n            font-size: 14px;\r\n            margin: 0 0 10px 0;\r\n            \r\n            span {\r\n                margin: 0 0 0 50px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .num {\r\n        display: grid;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        gap: 10px;\r\n        margin: 0 0 20px;\r\n        .numCard {\r\n        \r\n            .icon {\r\n                width: 80px;\r\n                height: 80px;\r\n                display: flex;\r\n                flex-shrink: 0;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n\r\n            .detail {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: flex-start;\r\n                justify-content: center;\r\n                padding: 0 0 0 20px;\r\n\r\n                p {\r\n                    margin: 0;\r\n\r\n                    &.num {\r\n                        font-size: 23px;\r\n                    }\r\n\r\n                    &.text {\r\n                        color: #929292;\r\n                        font-size: 14px;\r\n                        font-weight: bold;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    .graph {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        margin: 20px 0 0;\r\n    }\r\n</style>"],"mappings":";AAsDI,SAASA,OAAM,QAAS,mBAAmB;AAC3C,OAAO,KAAKC,OAAM,MAAO,SAAS;AAClC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAEC,OAAO,CAAC,gCAAgC,CAAC;MAClDC,SAAS,EAAE,CACP;QACIJ,IAAI,EAAE,MAAM;QACZK,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE;MACd,CAAC,EACD;QACIP,IAAI,EAAE,MAAM;QACZK,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE;MACd,CAAC,EACD;QACIP,IAAI,EAAE,OAAO;QACbK,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE;MACd,CAAC,EACD;QACIP,IAAI,EAAE,IAAI;QACVK,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE;MACd,CAAC,EACD;QACIP,IAAI,EAAE,IAAI;QACVK,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE;MACd,EACH;MACDC,UAAS,EAAI;QACTR,IAAI,EAAE,IAAI;QACVK,QAAQ,EAAE,MAAM;QAChBC,QAAQ,EAAE,MAAM;QAChBC,QAAQ,EAAE;MACd,CAAC;MACDE,SAAS,EAAE,CACP;QACIT,IAAI,EAAC,QAAQ;QACbU,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE;MACX,CAAC,EACD;QACIZ,IAAI,EAAC,QAAQ;QACbU,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE;MACX,CAAC,EACD;QACIZ,IAAI,EAAC,SAAS;QACdU,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE;MACX,CAAC,EACD;QACIZ,IAAI,EAAC,QAAQ;QACbU,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE;MACX,CAAC,EACD;QACIZ,IAAI,EAAC,QAAQ;QACbU,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE;MACX,CAAC,EACD;QACIZ,IAAI,EAAC,SAAS;QACdU,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE;MACX,CAAC;IAET;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNf,OAAO,CAAC,CAAC,CAACgB,IAAI,CAACC,GAAE,IAAK;MAClB,MAAM;QAAEC,IAAI;QAAEf;MAAK,IAAIc,GAAG,CAACd,IAAI;MAC/B,IAAIe,IAAG,KAAM,KAAK,EAAE;QAChB,IAAI,CAACZ,SAAQ,GAAIH,IAAI,CAACG,SAAS;QAC/B,MAAMa,KAAI,GAAIhB,IAAI,CAACiB,SAAS;QAC5B,MAAMC,KAAI,GAAIF,KAAK,CAACG,IAAI;QACxB,MAAMC,QAAO,GAAKC,MAAM,CAACC,IAAI,CAACN,KAAK,CAAChB,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAMuB,MAAK,GAAI,EAAE;QACjBH,QAAQ,CAACI,OAAO,CAACC,GAAE,IAAK;UACpBF,MAAM,CAACG,IAAI,CAAC;YACR3B,IAAI,EAAE0B,GAAG;YACTzB,IAAI,EAAEgB,KAAK,CAAChB,IAAI,CAAC2B,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACH,GAAG,CAAC,CAAC;YACvCI,IAAI,EAAE;UACV,CAAC;QACL,CAAC;QACD,MAAMC,MAAK,GAAI;UACXC,KAAK,EAAE;YACH/B,IAAI,EAAEkB;UACV,CAAC;UACDc,KAAK,EAAE,CAAC,CAAC;UACTC,MAAM,EAAE;YACJjC,IAAI,EAAEoB;UACV,CAAC;UACDG;QACJ;QAEA,MAAMW,CAAA,GAAIpC,OAAO,CAACqC,IAAI,CAAC,IAAI,CAACC,KAAK,CAACtC,OAAO,CAAC;QAC1CoC,CAAC,CAACG,SAAS,CAACP,MAAM,CAAC;;QAEnB;QACA,MAAMQ,UAAS,GAAI;UACfL,MAAM,EAAE;YACJ;YACAM,SAAS,EAAE;cACP5B,KAAK,EAAE;YACX;UACJ,CAAC;UACD6B,IAAI,EAAE;YACFC,IAAI,EAAE;UACV,CAAC;UACD;UACAC,OAAO,EAAE;YACLC,OAAO,EAAE;UACb,CAAC;UACDZ,KAAK,EAAE;YACHF,IAAI,EAAE,UAAU;YAAE;YAClB7B,IAAI,EAAEA,IAAI,CAAC4C,QAAQ,CAACjB,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACT,IAAI,CAAC;YAC1C0B,QAAQ,EAAE;cACNC,SAAS,EAAE;gBACPnC,KAAK,EAAE;cACX;YACJ,CAAC;YACDoC,SAAS,EAAE;cACPC,QAAQ,EAAE,CAAC;cACXrC,KAAK,EAAE;YACX;UACJ,CAAC;UACDqB,KAAK,EAAE,CACH;YACIH,IAAI,EAAE,OAAO;YACbgB,QAAQ,EAAE;cACNC,SAAS,EAAE;gBACPnC,KAAK,EAAE;cACX;YACJ;UACJ,CAAC,CACJ;UACDA,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC7BY,MAAM,EAAE,CACJ;YACIxB,IAAI,EAAE,MAAM;YACZC,IAAI,EAAEA,IAAI,CAAC4C,QAAQ,CAACjB,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACqB,GAAG,CAAC;YACzCpB,IAAI,EAAE;UACV,CAAC,EACD;YACI9B,IAAI,EAAE,MAAM;YACZC,IAAI,EAAEA,IAAI,CAAC4C,QAAQ,CAACjB,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACsB,MAAM,CAAC;YAC5CrB,IAAI,EAAE;UACV;QAER;QACA,MAAMsB,CAAA,GAAIrD,OAAO,CAACqC,IAAI,CAAC,IAAI,CAACC,KAAK,CAACgB,WAAW,CAAC;QAC9CD,CAAC,CAACd,SAAS,CAACC,UAAU,CAAC;MAC3B;MACAe,OAAO,CAACC,GAAG,CAACxC,GAAG,CAAC;IACpB,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}