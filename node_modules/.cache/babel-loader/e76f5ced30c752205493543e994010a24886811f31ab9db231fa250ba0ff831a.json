{"ast":null,"code":"import { reactive } from 'vue';\nexport default {\n  name: 'CommonForm',\n  props: {\n    formLabel: Array,\n    form: Object,\n    inline: Boolean\n  },\n  setup(props) {\n    // 使用 reactive 创建响应式的表单数据对象\n    const formData = reactive({});\n\n    // 初始化表单数据\n    const initForm = () => {\n      props.formLabel.forEach(item => {\n        formData[item.model] = '';\n      });\n    };\n\n    // 在组件初始化时调用初始化函数\n    initForm();\n    return {\n      formData\n    };\n  }\n};","map":{"version":3,"names":["reactive","name","props","formLabel","Array","form","Object","inline","Boolean","setup","formData","initForm","forEach","item","model"],"sources":["/Users/serina/Desktop/vue-backstage/src/components/CommonForm.vue"],"sourcesContent":["<template>\n    <el-form ref=\"form\" label-width=\"100px\" :model=\"formData\" :inline=\"inline\">\n      <el-form-item v-for=\"item in formLabel\" :key=\"item.label\" :label=\"item.label\">\n        <el-input v-if=\"item.type === 'input'\" :placeholder=\"'請輸入' + item.label\" v-model=\"formData[item.model]\"></el-input>\n        <el-switch v-if=\"item.type === 'switch'\" v-model=\"formData[item.model]\"></el-switch>\n        <el-date-picker v-if=\"item.type === 'date'\" type=\"date\" value-format=\"yyyy-MM-dd\" placeholder=\"選擇日期\" v-model=\"formData[item.model]\"></el-date-picker>\n        <el-select v-if=\"item.type === 'select'\" placeholder=\"請選擇\" v-model=\"formData[item.model]\">\n          <el-option v-for=\"(opt, index) in item.opts\" :key=\"index\" :label=\"opt.label\" :value=\"opt.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item><slot></slot></el-form-item>\n    </el-form>\n  </template>\n  \n  <script>\n  import { reactive } from 'vue';\n  export default {\n    name: 'CommonForm',\n    props: {\n      formLabel: Array,\n      form: Object,\n      inline: Boolean\n    },\n    setup(props) {\n    // 使用 reactive 创建响应式的表单数据对象\n    const formData = reactive({});\n\n    // 初始化表单数据\n    const initForm = () => {\n      props.formLabel.forEach(item => {\n        formData[item.model] = '';\n      });\n    };\n\n    // 在组件初始化时调用初始化函数\n    initForm();\n\n    return {\n      formData\n    };\n  }\n  };\n  </script>\n  "],"mappings":"AAeE,SAASA,QAAO,QAAS,KAAK;AAC9B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,SAAS,EAAEC,KAAK;IAChBC,IAAI,EAAEC,MAAM;IACZC,MAAM,EAAEC;EACV,CAAC;EACDC,KAAKA,CAACP,KAAK,EAAE;IACb;IACA,MAAMQ,QAAO,GAAIV,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAE7B;IACA,MAAMW,QAAO,GAAIA,CAAA,KAAM;MACrBT,KAAK,CAACC,SAAS,CAACS,OAAO,CAACC,IAAG,IAAK;QAC9BH,QAAQ,CAACG,IAAI,CAACC,KAAK,IAAI,EAAE;MAC3B,CAAC,CAAC;IACJ,CAAC;;IAED;IACAH,QAAQ,CAAC,CAAC;IAEV,OAAO;MACLD;IACF,CAAC;EACH;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}