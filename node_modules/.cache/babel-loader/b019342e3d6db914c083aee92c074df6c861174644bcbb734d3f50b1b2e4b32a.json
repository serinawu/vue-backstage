{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'homePage',\n  data() {\n    return {\n      userImg: require('@/assets/images/user.png'),\n      tableData: [{\n        name: 'oppo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'vivo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'apple',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '小米',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '三星',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }],\n      tableLabel: {\n        name: '課程',\n        todayBuy: '今日購買',\n        monthBuy: '本月購買',\n        totalBuy: '總共購買'\n      },\n      countData: [{\n        name: '今日支付訂單',\n        value: '1234',\n        icon: 'SuccessFilled',\n        color: '#2ec7c9'\n      }, {\n        name: '今日收藏訂單',\n        value: '210',\n        icon: 'StarFilled',\n        color: '#ffb980'\n      }, {\n        name: '今日未支付訂單',\n        value: '1234',\n        icon: 'GoodsFilled',\n        color: '#5ab1ef'\n      }, {\n        name: '本月支付訂單',\n        value: '1234',\n        icon: 'SuccessFilled',\n        color: '#2ec7c9'\n      }, {\n        name: '本月收藏訂單',\n        value: '210',\n        icon: 'StarFilled',\n        color: '#ffb980'\n      }, {\n        name: '本月未支付訂單',\n        value: '1234',\n        icon: 'GoodsFilled',\n        color: '#5ab1ef'\n      }]\n    };\n  },\n  mounted() {\n    fetch('/data/statistics.json').then(response => response.json()).then(({\n      code,\n      data\n    }) => {\n      if (code === 20000) {\n        this.tableData = data.tableData;\n        const order = data.orderData;\n        const xData = order.date;\n        const keyArray = Object.keys(order.data[0]);\n        const series = keyArray.map(key => ({\n          name: key,\n          data: order.data.map(item => item[key]),\n          type: 'line'\n        }));\n        const option = {\n          xAxis: {\n            data: xData\n          },\n          yAxis: {},\n          legend: {\n            data: keyArray\n          },\n          series\n        };\n        const E = echarts.init(this.$refs.echarts);\n        E.setOption(option);\n      }\n\n      //用戶圖\n      const userOption = {\n        legend: {\n          //圖例文字顏色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        //提示框\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: \"category\",\n          //類軸\n          data: data.userData.map(item => item.date),\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: '#333'\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [{\n          name: '新增用戶',\n          data: data.userData.map(item => item.new),\n          type: 'bar'\n        }, {\n          name: '活躍用戶',\n          data: data.userData.map(item => item.active),\n          type: 'bar'\n        }]\n      };\n      const U = echarts.init(this.$refs.userEcharts);\n      U.setOption(userOption);\n    }).catch(error => {\n      console.log('Error loading the data', error);\n    });\n  }\n};","map":{"version":3,"names":["echarts","name","data","userImg","require","tableData","todayBuy","monthBuy","totalBuy","tableLabel","countData","value","icon","color","mounted","fetch","then","response","json","code","order","orderData","xData","date","keyArray","Object","keys","series","map","key","item","type","option","xAxis","yAxis","legend","E","init","$refs","setOption","userOption","textStyle","grid","left","tooltip","trigger","userData","axisLine","lineStyle","axisLabel","interval","new","active","U","userEcharts","catch","error","console","log"],"sources":["/Users/serina/Desktop/vue-backstage/src/views/home/index.vue"],"sourcesContent":["<template>\n    <el-row class=\"home\" :gutter=\"20\">\n        <el-col :span=\"8\" style=\"margin-top: 20px\">\n            <el-card shadow=\"hover\">\n                <div class=\"user\">\n                    <img :src=\"userImg\" />\n                    <div class=\"userInfo\">\n                        <p class=\"name\">Admin</p>\n                        <p class=\"access\">超級管理員</p>\n                    </div>\n                </div>\n                <div class=\"login-info\">\n                    <p>上次登入的時間:<span>2023/12/01</span></p>\n                    <p>上次登入的地點:<span>台灣</span></p>\n                </div>\n            </el-card>\n            <el-card style=\"margin-top: 20px; height: 460px;\">\n                <el-table :data=\"tableData\">\n                    <el-table-column \n                    v-for=\"(val, index) in tableLabel\" \n                    :key=\"index\" \n                    :prop=\"index\"\n                    :label=\"val\">\n                    </el-table-column>\n                </el-table>\n            </el-card>\n        </el-col>\n        <el-col class=\"numList\" style=\"margin-top: 20px\" :span=\"16\">\n            <div class=\"num\">\n                <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{display: 'flex', padding: 0}\" class=\"numCard\">\n                    <div class=\"icon\" :style=\"{ background: item.color }\">\n                        <el-icon color=\"#fff\" size=\"30px\">\n                            <component :is=\"item.icon\"></component>\n                        </el-icon>\n                    </div>\n                    <div class=\"detail\">\n                        <p class=\"num\">¥{{ item.value }}</p>\n                        <p class=\"text\">{{ item.name }}</p>\n                    </div>\n                </el-card>\n            </div>\n            <el-card style=\"height: 280px\">\n                <div style=\"width: 100%; height: 280px; margin: 0 auto;\" ref=\"echarts\"></div>\n            </el-card>\n            <div class=\"graph\">\n                <el-card style=\"width: 48%; height: 260px\">\n                    <div style=\"height: 240px;\" ref=\"userEcharts\"></div>\n                </el-card>\n                <el-card style=\"width: 48%; height: 260px\">\n                    <div style=\"height: 240px;\" ref=\"videoEcharts\"></div>\n                </el-card>\n            </div>\n        </el-col>\n    </el-row>\n</template>\n<script>\n    import * as echarts from 'echarts';\n    export default {\n        name: 'homePage',\n        data() {\n            return {\n                userImg: require('@/assets/images/user.png'),\n                tableData: [\n                    {\n                        name: 'oppo',\n                        todayBuy: 100,\n                        monthBuy: 300,\n                        totalBuy: 800\n                    },\n                    {\n                        name: 'vivo',\n                        todayBuy: 100,\n                        monthBuy: 300,\n                        totalBuy: 800\n                    },\n                    {\n                        name: 'apple',\n                        todayBuy: 100,\n                        monthBuy: 300,\n                        totalBuy: 800\n                    },\n                    {\n                        name: '小米',\n                        todayBuy: 100,\n                        monthBuy: 300,\n                        totalBuy: 800\n                    },\n                    {\n                        name: '三星',\n                        todayBuy: 100,\n                        monthBuy: 300,\n                        totalBuy: 800\n                    }\n                ],\n                tableLabel : {\n                    name: '課程',\n                    todayBuy: '今日購買',\n                    monthBuy: '本月購買',\n                    totalBuy: '總共購買',\n                },\n                countData: [\n                    {\n                        name:'今日支付訂單',\n                        value: '1234',\n                        icon: 'SuccessFilled',\n                        color: '#2ec7c9',\n                    },\n                    {\n                        name:'今日收藏訂單',\n                        value: '210',\n                        icon: 'StarFilled',\n                        color: '#ffb980',\n                    },\n                    {\n                        name:'今日未支付訂單',\n                        value: '1234',\n                        icon: 'GoodsFilled',\n                        color: '#5ab1ef',\n                    },\n                    {\n                        name:'本月支付訂單',\n                        value: '1234',\n                        icon: 'SuccessFilled',\n                        color: '#2ec7c9',\n                    },\n                    {\n                        name:'本月收藏訂單',\n                        value: '210',\n                        icon: 'StarFilled',\n                        color: '#ffb980',\n                    },\n                    {\n                        name:'本月未支付訂單',\n                        value: '1234',\n                        icon: 'GoodsFilled',\n                        color: '#5ab1ef',\n                    },\n                ]\n            }\n        },\n        mounted() {\n            fetch('/data/statistics.json')\n            .then(response => response.json())\n            .then(({ code, data }) => {\n                if (code === 20000) {\n                    this.tableData = data.tableData;\n                    const order = data.orderData;\n                    const xData = order.date;\n                    const keyArray = Object.keys(order.data[0]);\n                    const series =  keyArray.map(key => ({\n                        name: key,\n                        data: order.data.map(item => item[key]),\n                        type: 'line'\n                    }));\n                    const option = {\n                        xAxis: {\n                            data: xData,\n                        },\n                        yAxis: {},\n                        legend: {\n                            data: keyArray\n                        },\n                        series\n                    };\n                    const E = echarts.init(this.$refs.echarts);\n                    E.setOption(option);\n                }\n\n                //用戶圖\n                const userOption = {\n                    legend: {\n                        //圖例文字顏色\n                        textStyle: {\n                            color: \"#333\",\n                        },\n                    },\n                    grid: {\n                        left: \"20%\"\n                    },\n                    //提示框\n                    tooltip: {\n                        trigger: 'axis',\n                    },\n                    xAxis: {\n                        type: \"category\", //類軸\n                        data: data.userData.map(item => item.date),\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#17b3a3\",\n                            },\n                        },\n                        axisLabel: {\n                            interval: 0,\n                            color: '#333',\n                        },\n                    },\n                    yAxis: [\n                        {\n                            type: \"value\",\n                            axisLine: {\n                                lineStyle: {\n                                    color: \"#17b3a3\",\n                                },\n                            },\n                        },\n                    ],\n                    color: [\"#2ec7c9\", \"#b6a2de\"],\n                    series: [\n                        {\n                            name: '新增用戶',\n                            data: data.userData.map(item => item.new),\n                            type: 'bar'\n                        },\n                        {\n                            name: '活躍用戶',\n                            data: data.userData.map(item => item.active),\n                            type: 'bar'\n                        }\n                    ],\n                }\n                const U = echarts.init(this.$refs.userEcharts);\n                U.setOption(userOption);\n            })\n            .catch(error => {\n                console.log('Error loading the data', error);\n            });\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n\n    .user {\n        display: flex;\n        align-items: center;\n        border-bottom: 1px solid lightgray;\n        padding: 0 0 20px;\n\n        img {\n            width: 150px;\n            height: 150px;\n            flex-shrink: 0;\n            margin: 0 20px 0 0;\n        }\n\n        .userInfo {\n            \n            p {\n                text-align: left;\n                white-space: nowrap;\n                margin: 0 0 5px ;\n\n                &.name {\n                    font-size: 22px;\n                }\n\n                &.access {\n                    color: gray;\n                    font-size: 14px;\n                }\n            }\n        }\n    }\n\n    .login-info {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        margin: 20px 0 0;\n\n        p {\n            color: gray;\n            font-size: 14px;\n            margin: 0 0 10px 0;\n            \n            span {\n                margin: 0 0 0 50px;\n            }\n        }\n    }\n\n    .num {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        gap: 10px;\n        margin: 0 0 20px;\n        .numCard {\n        \n            .icon {\n                width: 80px;\n                height: 80px;\n                display: flex;\n                flex-shrink: 0;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .detail {\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                justify-content: center;\n                padding: 0 0 0 20px;\n\n                p {\n                    margin: 0;\n\n                    &.num {\n                        font-size: 23px;\n                    }\n\n                    &.text {\n                        color: #929292;\n                        font-size: 14px;\n                        font-weight: bold;\n                    }\n                }\n            }\n        }\n    }\n    \n    .graph {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin: 20px 0 0;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}