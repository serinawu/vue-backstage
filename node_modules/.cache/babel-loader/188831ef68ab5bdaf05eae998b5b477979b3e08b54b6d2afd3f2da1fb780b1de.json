{"ast":null,"code":"import Mock from \"mockjs\";\nexport default {\n  getMenu: config => {\n    return new Promise((resolve, reject) => {\n      const {\n        username,\n        password\n      } = JSON.parse(config.body);\n      // 先判斷用戶是否存在\n      // 判斷帳號和密碼是否對應\n      if (username === 'admin' && password === 'admin') {\n        resolve({\n          data: {\n            menu: [{\n              path: '/home',\n              name: 'home',\n              label: '首頁',\n              icon: 'HomeFilled',\n              url: 'home/index'\n            }, {\n              path: '/mall',\n              name: 'mall',\n              label: '商品管理',\n              icon: 'video-play',\n              url: 'mall/index'\n            }, {\n              path: '/user',\n              name: 'user',\n              label: '用戶管理',\n              icon: 'user',\n              url: 'user/index'\n            }, {\n              path: '/other',\n              label: '其他',\n              icon: 'location',\n              children: [{\n                path: '/page1',\n                name: 'page1',\n                label: '頁面1',\n                icon: 'Setting',\n                url: 'other/pageOne'\n              }, {\n                path: '/page2',\n                name: 'page2',\n                label: '頁面2',\n                icon: 'Setting',\n                url: 'other/pageTwo'\n              }]\n            }],\n            token: Mock.Random.guid(),\n            message: '獲取成功'\n          }\n        });\n      } else if (username === 'test' && password === \"Test123\") {\n        resolve({\n          data: {\n            menu: [{\n              path: 'home',\n              //配置動態Router：用戶網址欄輸入的路徑\n              name: 'home',\n              //路由名稱，用於<router-link :to\"{name: home}\"></router-link>\n              label: '首頁',\n              //menu項顯示的文字\n              icon: 'HomeFilled',\n              //顯示相對element-ul名稱的icon\n              url: 'home/index' // menu項相對應的組件路徑，用於動態導入=>addMenu\n            }, {\n              path: 'mall',\n              name: 'mall',\n              label: '商品管理',\n              icon: 'video-play',\n              url: 'mall/index'\n            }],\n            token: Mock.Random.guid(),\n            message: '獲取成功'\n          }\n        });\n      } else {\n        reject({\n          message: '用戶或密碼錯誤'\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["Mock","getMenu","config","Promise","resolve","reject","username","password","JSON","parse","body","data","menu","path","name","label","icon","url","children","token","Random","guid","message"],"sources":["/Users/serina/Desktop/vue-backstage/src/api/mockServeData/permission.js"],"sourcesContent":["import Mock from \"mockjs\";\nexport default {\n    getMenu: config => {\n        return new Promise((resolve, reject) => {\n            const { username, password } = JSON.parse(config.body);\n            // 先判斷用戶是否存在\n            // 判斷帳號和密碼是否對應\n            if (username === 'admin' && password === 'admin'){\n                resolve ({\n                    data: {\n                        menu: [\n                            {\n                                path: '/home',\n                                name: 'home',\n                                label: '首頁',\n                                icon: 'HomeFilled',\n                                url: 'home/index'\n                            },\n                            {\n                                path: '/mall',\n                                name: 'mall',\n                                label: '商品管理',\n                                icon: 'video-play',\n                                url: 'mall/index'\n                            },\n                            {\n                                path: '/user',\n                                name: 'user',\n                                label: '用戶管理',\n                                icon: 'user',\n                                url: 'user/index'\n                            },\n                            {\n                                path: '/other',\n                                label: '其他',\n                                icon: 'location',\n                                children: [\n                                    {\n                                        path: '/page1',\n                                        name: 'page1',\n                                        label: '頁面1',\n                                        icon: 'Setting',\n                                        url: 'other/pageOne'\n                                    },\n                                    {\n                                        path: '/page2',\n                                        name: 'page2',\n                                        label: '頁面2',\n                                        icon: 'Setting',\n                                        url: 'other/pageTwo'\n                                    }\n                                ]\n                            }\n                        ],\n                        token: Mock.Random.guid(),\n                        message: '獲取成功'\n                    }\n                });\n            } else if (username === 'test' && password === \"Test123\") {\n                resolve ({\n                    data: {\n                        menu: [\n                            {\n                                path: 'home', //配置動態Router：用戶網址欄輸入的路徑\n                                name: 'home', //路由名稱，用於<router-link :to\"{name: home}\"></router-link>\n                                label: '首頁', //menu項顯示的文字\n                                icon: 'HomeFilled', //顯示相對element-ul名稱的icon\n                                url: 'home/index' // menu項相對應的組件路徑，用於動態導入=>addMenu\n                            },\n                            {\n                                path: 'mall',\n                                name: 'mall',\n                                label: '商品管理',\n                                icon: 'video-play',\n                                url: 'mall/index'\n                            }\n                        ],\n                        token: Mock.Random.guid(),\n                        message: '獲取成功'\n                    }\n                });\n            } else {\n                reject ({message: '用戶或密碼錯誤'});\n            }\n        });\n    }\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,eAAe;EACXC,OAAO,EAAEC,MAAM,IAAI;IACf,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAM;QAAEC,QAAQ;QAAEC;MAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACP,MAAM,CAACQ,IAAI,CAAC;MACtD;MACA;MACA,IAAIJ,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAC;QAC7CH,OAAO,CAAE;UACLO,IAAI,EAAE;YACFC,IAAI,EAAE,CACF;cACIC,IAAI,EAAE,OAAO;cACbC,IAAI,EAAE,MAAM;cACZC,KAAK,EAAE,IAAI;cACXC,IAAI,EAAE,YAAY;cAClBC,GAAG,EAAE;YACT,CAAC,EACD;cACIJ,IAAI,EAAE,OAAO;cACbC,IAAI,EAAE,MAAM;cACZC,KAAK,EAAE,MAAM;cACbC,IAAI,EAAE,YAAY;cAClBC,GAAG,EAAE;YACT,CAAC,EACD;cACIJ,IAAI,EAAE,OAAO;cACbC,IAAI,EAAE,MAAM;cACZC,KAAK,EAAE,MAAM;cACbC,IAAI,EAAE,MAAM;cACZC,GAAG,EAAE;YACT,CAAC,EACD;cACIJ,IAAI,EAAE,QAAQ;cACdE,KAAK,EAAE,IAAI;cACXC,IAAI,EAAE,UAAU;cAChBE,QAAQ,EAAE,CACN;gBACIL,IAAI,EAAE,QAAQ;gBACdC,IAAI,EAAE,OAAO;gBACbC,KAAK,EAAE,KAAK;gBACZC,IAAI,EAAE,SAAS;gBACfC,GAAG,EAAE;cACT,CAAC,EACD;gBACIJ,IAAI,EAAE,QAAQ;gBACdC,IAAI,EAAE,OAAO;gBACbC,KAAK,EAAE,KAAK;gBACZC,IAAI,EAAE,SAAS;gBACfC,GAAG,EAAE;cACT,CAAC;YAET,CAAC,CACJ;YACDE,KAAK,EAAEnB,IAAI,CAACoB,MAAM,CAACC,IAAI,CAAC,CAAC;YACzBC,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;MACN,CAAC,MAAM,IAAIhB,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,SAAS,EAAE;QACtDH,OAAO,CAAE;UACLO,IAAI,EAAE;YACFC,IAAI,EAAE,CACF;cACIC,IAAI,EAAE,MAAM;cAAE;cACdC,IAAI,EAAE,MAAM;cAAE;cACdC,KAAK,EAAE,IAAI;cAAE;cACbC,IAAI,EAAE,YAAY;cAAE;cACpBC,GAAG,EAAE,YAAY,CAAC;YACtB,CAAC,EACD;cACIJ,IAAI,EAAE,MAAM;cACZC,IAAI,EAAE,MAAM;cACZC,KAAK,EAAE,MAAM;cACbC,IAAI,EAAE,YAAY;cAClBC,GAAG,EAAE;YACT,CAAC,CACJ;YACDE,KAAK,EAAEnB,IAAI,CAACoB,MAAM,CAACC,IAAI,CAAC,CAAC;YACzBC,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;MACN,CAAC,MAAM;QACHjB,MAAM,CAAE;UAACiB,OAAO,EAAE;QAAS,CAAC,CAAC;MACjC;IACJ,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}