{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\nimport Cookie from 'js-cookie';\nimport permission from '@/api/mockServeData/permission';\nexport default {\n  name: 'loginPage',\n  data() {\n    return {\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '請輸入用戶名稱',\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          message: '用戶名稱長度不得小於三位',\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: '請輸入密碼',\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          permission.getMenu({\n            body: JSON.stringify(this.form)\n          }).then(response => {\n            const token = Mock.Random.guid();\n            Cookie.set('token', token);\n            this.$store.commit('setToken', token);\n            this.$store.commit('setMenu', response.data.menu);\n            this.$router.push('/home');\n          }).catch(error => {\n            this.$message.error(error.message || '登入失敗');\n          });\n        } else {\n          console.log('此帳號不存在');\n          this.$message.error('登入失敗');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Mock","Cookie","permission","name","data","form","rules","username","required","message","trigger","min","password","methods","login","$refs","validate","valid","getMenu","body","JSON","stringify","then","response","token","Random","guid","set","$store","commit","menu","$router","push","catch","error","$message","console","log"],"sources":["/Users/serina/Desktop/vue-backstage/src/views/login/loginPage.vue"],"sourcesContent":["<template>\n    <el-form\n    :model=\"form\"\n    status-icon\n    :rules=\"rules\"\n    ref=\"form\"\n    label-width=\"100px\"\n    class=\"login-container\"\n    >\n        <h3 class=\"login-title\">系統登入</h3>\n        <el-form-item\n        label=\"用戶名稱\"\n        label-width=\"80px\"\n        prop=\"userName\"\n        class=\"username\"\n        >\n            <el-input\n            type=\"input\"\n            v-model=\"form.username\"\n            autocomplete=\"off\"\n            placeholder=\"請輸入帳號\"\n            ></el-input>\n        </el-form-item>\n        <el-form-item\n        label=\"密碼\"\n        label-width=\"80px\"\n        prop=\"password\"\n        >\n        <el-input\n        type=\"password\"\n        v-model=\"form.password\"\n        autocomplete=\"off\"\n        placeholder=\"請輸入密碼\"\n        ></el-input>\n    </el-form-item>\n    <el-button type=\"primary\" @click=\"login\" class=\"login_submit\">登入</el-button>\n    </el-form>\n</template>\n<script>\nimport Mock from 'mockjs';\nimport Cookie from 'js-cookie';\nimport permission from '@/api/mockServeData/permission';\n\nexport default {\n    name: 'loginPage',\n    data () {\n        return {\n            form: {\n                \n            },\n            rules: {\n                username: [\n                    {\n                        required: true, \n                        message: '請輸入用戶名稱',\n                        trigger: \"blur\"\n                    },\n                    {\n                        min: 3,\n                        message: '用戶名稱長度不得小於三位',\n                        trigger: \"blur\"\n                    }\n                ],\n                password: [\n                    {\n                        required: true,\n                        message: '請輸入密碼',\n                        trigger: \"blur\"\n                    }\n                ]\n            }\n        }\n    },\n    methods: {\n        login() {\n            this.$refs.form.validate((valid)=> {\n                if (valid) {\n                    permission.getMenu({ body: JSON.stringify(this.form)})\n                    .then(response => {\n                        const token = Mock.Random.guid();\n                        Cookie.set('token', token);\n                        this.$store.commit('setToken', token);\n                        this.$store.commit('setMenu', response.data.menu);\n                        this.$router.push('/home');\n                    }).catch(error => {\n                        this.$message.error(error.message || '登入失敗');\n                    });\n                    \n                } else {\n                    console.log('此帳號不存在');\n                    this.$message.error('登入失敗');\n                    return false;\n                }\n            });\n        }\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.login-container {\n    width: 350px;\n    border-radius: 15px;\n    background-clip: padding-box;\n    margin: 180px auto;\n    padding: 35px 35px 15px;\n    background: #ffffff;\n    border: 1px solid #eaeaea;\n    box-shadow: 0 0 25px #cacaca;\n}\n.login-title {\n    margin: 0 auto 20px;\n    text-align: center;\n    color: #505458;\n}\n.el-form-item {\n\n    div {\n        margin-left: 0 !important;\n\n            button {\n            margin: 0 auto;\n        }\n    }\n}\n</style>"],"mappings":";AAuCA,OAAOA,IAAG,MAAO,QAAQ;AACzB,OAAOC,MAAK,MAAO,WAAW;AAC9B,OAAOC,UAAS,MAAO,gCAAgC;AAEvD,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,IAAI,EAAE,CAEN,CAAC;MACDC,KAAK,EAAE;QACHC,QAAQ,EAAE,CACN;UACIC,QAAQ,EAAE,IAAI;UACdC,OAAO,EAAE,SAAS;UAClBC,OAAO,EAAE;QACb,CAAC,EACD;UACIC,GAAG,EAAE,CAAC;UACNF,OAAO,EAAE,cAAc;UACvBC,OAAO,EAAE;QACb,EACH;QACDE,QAAQ,EAAE,CACN;UACIJ,QAAQ,EAAE,IAAI;UACdC,OAAO,EAAE,OAAO;UAChBC,OAAO,EAAE;QACb;MAER;IACJ;EACJ,CAAC;EACDG,OAAO,EAAE;IACLC,KAAKA,CAAA,EAAG;MACJ,IAAI,CAACC,KAAK,CAACV,IAAI,CAACW,QAAQ,CAAEC,KAAK,IAAI;QAC/B,IAAIA,KAAK,EAAE;UACPf,UAAU,CAACgB,OAAO,CAAC;YAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,IAAI;UAAC,CAAC,EACpDiB,IAAI,CAACC,QAAO,IAAK;YACd,MAAMC,KAAI,GAAIxB,IAAI,CAACyB,MAAM,CAACC,IAAI,CAAC,CAAC;YAChCzB,MAAM,CAAC0B,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC;YAC1B,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEL,KAAK,CAAC;YACrC,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEN,QAAQ,CAACnB,IAAI,CAAC0B,IAAI,CAAC;YACjD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;UAC9B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;YACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAACA,KAAK,CAACzB,OAAM,IAAK,MAAM,CAAC;UAChD,CAAC,CAAC;QAEN,OAAO;UACH2B,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrB,IAAI,CAACF,QAAQ,CAACD,KAAK,CAAC,MAAM,CAAC;UAC3B,OAAO,KAAK;QAChB;MACJ,CAAC,CAAC;IACN;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}