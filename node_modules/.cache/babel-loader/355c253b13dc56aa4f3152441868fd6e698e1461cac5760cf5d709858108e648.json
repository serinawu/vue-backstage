{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\n\n//get請求從config.url獲取參數，post從config.body中獲取參數\nfunction param2Obj(url) {\n  const search = url.split('?')[1];\n  if (!search) {\n    return {};\n  }\n  const params = new URLSearchParams(search);\n  let obj = {};\n  for (let [key, value] of params) {\n    obj[key] = value;\n  }\n  return obj;\n}\nlet List = [];\nconst count = 200;\nfor (let i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: '@guid',\n    name: '@cname',\n    addr: '@country(true)',\n    'age|18-60': 1,\n    birth: '@date',\n    sex: '@integer(0, 1)'\n  }));\n}\nexport default {\n  /**\n   * 獲取列表\n   * 要帶參數 name, page, limit; name 可以不填,page, limit 有默認值\n   * @param name, page, limit\n   * @return {number} code\n   * @return {number} count\n   * @return {*[]} data\n   */\n  getUserList: config => {\n    const {\n      name,\n      page = 1,\n      limit = 20\n    } = param2Obj(config.url);\n    console.log('name:' + name, 'page:' + page, '分頁大小limit:' + limit);\n    const mockList = List.filter(user => {\n      if (name && user.name.indexOf(name) === -1 && user.addr.indexOf(name) === -1) return false;\n      return true;\n    });\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1));\n    return {\n      code: 20000,\n      count: mockList.length,\n      list: pageList\n    };\n  },\n  /**\n   * 增加用戶\n   * @param name, addr, age, birth, sex\n   * @return {number} \n   * @return {message: string} data\n   */\n  createUser: config => {\n    const {\n      name,\n      addr,\n      age,\n      birth,\n      sex\n    } = JSON.parse(config.body);\n    // console.log(JSON.parse(config.body))\n    List.unshift({\n      id: Mock.Random.guid(),\n      name: name,\n      addr: addr,\n      age: age,\n      birth: birth,\n      sex: sex\n    });\n    return {\n      code: 20000,\n      data: {\n        message: '添加成功'\n      }\n    };\n  },\n  /**\n   * 刪除用戶\n   * @param id\n   * @return {*}\n   */\n  deleteUser: config => {\n    const {\n      id\n    } = JSON.parse(config.body);\n    if (!id) {\n      return {\n        code: -999,\n        message: '參數不正確'\n      };\n    } else {\n      List = List.filter(u => u.id !== id);\n      return {\n        code: 20000,\n        message: '刪除成功'\n      };\n    }\n  },\n  /**\n   * 批量刪除\n   * @param config\n   * @return {number} \n   * @return {message: string} data\n   */\n  batchRemove: config => {\n    let {\n      ids\n    } = param2Obj(config.url);\n    ids = ids.split(',');\n    List = List.filter(u => !ids.includes(u.id));\n    return {\n      code: 20000,\n      data: {\n        message: '批量刪除成功'\n      }\n    };\n  },\n  /**\n   * 修改用戶\n   * @param id, name, addr, age, birth. sex\n   * @return {number} \n   * @return {message: string} data\n   */\n  updateUser: config => {\n    const {\n      id,\n      name,\n      addr,\n      age,\n      birth,\n      sex\n    } = JSON.parse(config.body);\n    const sex_num = parseInt(sex);\n    List.some(u => {\n      if (u.id === id) {\n        u.name = name;\n        u.addr = addr;\n        u.age = age;\n        u.birth = birth;\n        u.sex = sex_num;\n      }\n    });\n    return {\n      code: 20000,\n      data: {\n        message: '編輯成功'\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","param2Obj","url","search","split","params","URLSearchParams","obj","key","value","List","count","i","push","mock","id","name","addr","birth","sex","getUserList","config","page","limit","console","log","mockList","filter","user","indexOf","pageList","item","index","code","length","list","createUser","age","JSON","parse","body","unshift","Random","guid","data","message","deleteUser","u","batchRemove","ids","includes","updateUser","sex_num","parseInt","some"],"sources":["/Users/serina/Desktop/vue-backstage/src/api/mockServeData/user.js"],"sourcesContent":["import Mock from 'mockjs'\n\n//get請求從config.url獲取參數，post從config.body中獲取參數\nfunction param2Obj (url) {\n    const search = url.split('?')[1];\n    if (!search) {\n        return {}\n    }\n    const params = new URLSearchParams(search);\n    let obj = {};\n    for (let [key, value] of params) {\n        obj[key] = value;\n    }\n    return obj;\n}\n\nlet List = []\nconst count = 200;\n\nfor (let i = 0; i < count; i ++) {\n    List.push(Mock.mock({\n            id: '@guid',\n            name: '@cname',\n            addr: '@country(true)',\n            'age|18-60':1,\n            birth: '@date',\n            sex: '@integer(0, 1)'\n    }));\n}\n\n\nexport default {\n    /**\n     * 獲取列表\n     * 要帶參數 name, page, limit; name 可以不填,page, limit 有默認值\n     * @param name, page, limit\n     * @return {number} code\n     * @return {number} count\n     * @return {*[]} data\n     */\n    getUserList: config => {\n        const { name, page = 1, limit = 20 } = param2Obj(config.url);\n        console.log('name:' + name, 'page:' + page, '分頁大小limit:' +limit)\n        const mockList = List.filter(user => {\n            if(name && user.name.indexOf(name) === -1 && user.addr.indexOf(name) === -1)return false\n            return true\n        })\n        const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page -1))\n        return {\n            code: 20000,\n            count: mockList.length,\n            list: pageList\n        }\n    },\n    /**\n     * 增加用戶\n     * @param name, addr, age, birth, sex\n     * @return {number} \n     * @return {message: string} data\n     */\n    createUser: config => {\n        const { name, addr, age, birth, sex } = JSON.parse(config.body);\n        // console.log(JSON.parse(config.body))\n        List.unshift({\n            id: Mock.Random.guid(),\n            name: name,\n            addr: addr,\n            age: age,\n            birth: birth,\n            sex: sex\n        })\n        return {\n            code: 20000,\n            data: {\n                message: '添加成功'\n            }\n        }\n    },\n\n    /**\n     * 刪除用戶\n     * @param id\n     * @return {*}\n     */\n    deleteUser: config => {\n        const { id } = JSON.parse(config.body);\n        if(!id) {\n            return {\n                code: -999,\n                message: '參數不正確'\n            }\n        } else {\n            List = List.filter(u => u.id !== id)\n            return {\n                code: 20000,\n                message: '刪除成功'\n            }\n        }\n    },\n    /**\n     * 批量刪除\n     * @param config\n     * @return {number} \n     * @return {message: string} data\n     */\n    batchRemove: config => {\n        let { ids } = param2Obj(config.url);\n        ids = ids.split(',');\n        List = List.filter(u => !ids.includes(u.id));\n        return {\n            code: 20000,\n            data: {\n                message: '批量刪除成功'\n            }\n        }\n    },\n    /**\n     * 修改用戶\n     * @param id, name, addr, age, birth. sex\n     * @return {number} \n     * @return {message: string} data\n     */\n    updateUser: config => {\n        const { id, name, addr, age, birth, sex } = JSON.parse(config.body);\n        const sex_num = parseInt(sex);\n        List.some(u=> {\n            if (u.id === id) {\n                u.name = name;\n                u.addr = addr;\n                u.age = age;\n                u.birth = birth;\n                u.sex = sex_num;\n            }\n        })\n        return {\n            code: 20000,\n            data: {\n                message: '編輯成功'\n            }\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}