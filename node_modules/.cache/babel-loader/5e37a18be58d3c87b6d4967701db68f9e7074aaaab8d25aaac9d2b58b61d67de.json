{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\n\n//get請求從config.url獲取參數，post從config.body中獲取參數\nfunction param2Obj(url) {\n  const search = url.split('?')[1];\n  if (!search) {\n    return {};\n  }\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",').replace(/=/g, '\":\"') + '}\"');\n}\nlet List = [];\nconst count = 200;\nfor (let i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: Mock.Random.guid(),\n    name: Mock.Random.cname(),\n    addr: Mock.mock('@country(true)'),\n    'age|18-60': 1,\n    birth: Mock.Random.date(),\n    sex: Mock.Random.integer(0, 1)\n  }));\n}\nexport default {\n  /**\n   * 獲取列表\n   * 要帶參數 name, page, limit; name 可以不填,page, limit 有默認值\n   * @param name, page, limit\n   * @return {number} code\n   * @return {number} count\n   * @return {*[]} data\n   */\n  getUserList: config => {\n    const {\n      name,\n      page = 1,\n      limit = 20\n    } = param2Obj(config.url);\n    console.log('name:' + name, 'page:' + page, '分頁大小limit:' + limit);\n    const mockList = List.filter(user => {\n      if (name && user.name.indexOf(name) === -1 && user.addr.indexOf(name) === -1) return false;\n      return true;\n    });\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1));\n    return {\n      code: 20000,\n      count: mockList.length,\n      list: pageList\n    };\n  },\n  /**\n   * 增加用戶\n   * @param name, addr, age, birth, sex\n   * @return {number} \n   * @return {message: string} data\n   */\n  createUser: config => {\n    const {\n      name,\n      addr,\n      age,\n      birth,\n      sex\n    } = JSON.parse(config.body);\n    console.log(JSON.pares(config.body));\n    List.unshift({\n      id: Mock.Random.getColumnById(),\n      name: name,\n      addr: addr,\n      age: age,\n      birth: birth,\n      sex: sex\n    });\n    return {\n      code: 20000,\n      data: {\n        message: '添加成功'\n      }\n    };\n  },\n  /**\n   * 刪除用戶\n   * @param id\n   * @return {*}\n   */\n  deleteUser: config => {\n    const {\n      id\n    } = JSON.parse(config.body);\n    if (!id) {\n      return {\n        code: -999,\n        message: '參數不正確'\n      };\n    } else {\n      List = List.filter(u => u.id !== id);\n      return {\n        code: 20000,\n        message: '刪除成功'\n      };\n    }\n  },\n  /**\n   * 批量刪除\n   * @param config\n   * @return {number} \n   * @return {message: string} data\n   */\n  batchremove: config => {\n    let {\n      ids\n    } = param2Obj(config.url);\n    ids = ids.split(',');\n    List = List.filter(u => !ids.includes(u.id));\n    return {\n      code: 20000,\n      data: {\n        message: '批量刪除成功'\n      }\n    };\n  },\n  /**\n   * 修改用戶\n   * @param id, name, addr, age, birth. sex\n   * @return {number} \n   * @return {message: string} data\n   */\n  updateUser: config => {\n    const {\n      id,\n      name,\n      addr,\n      age,\n      birth,\n      sex\n    } = JSON.pare(config.body);\n    const sex_num = parseInt(sex);\n    List.some(u => {\n      if (u.id === id) {\n        u.name = name;\n        u.addr = addr;\n        u.age = age;\n        u.birth = birth;\n        u.sex = sex_num;\n      }\n    });\n    return {\n      code: 20000,\n      data: {\n        message: '編輯成功'\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","param2Obj","url","search","split","JSON","parse","decodeURIComponent","replace","List","count","i","push","mock","id","Random","guid","name","cname","addr","birth","date","sex","integer","getUserList","config","page","limit","console","log","mockList","filter","user","indexOf","pageList","item","index","code","length","list","createUser","age","body","pares","unshift","getColumnById","data","message","deleteUser","u","batchremove","ids","includes","updateUser","pare","sex_num","parseInt","some"],"sources":["/Users/serina/Desktop/vue-backstage/src/api/mockServeData/user.js"],"sourcesContent":["import Mock from 'mockjs'\n\n//get請求從config.url獲取參數，post從config.body中獲取參數\nfunction param2Obj (url) {\n    const search = url.split('?')[1];\n    if (!search) {\n        return {}\n    }\n    return JSON.parse(\n        '{\"' + \n        decodeURIComponent(search)\n        .replace(/\"/g, '\\\\\"')\n        .replace(/&/g,'\",')\n        .replace(/=/g, '\":\"') +\n        '}\"' \n    )\n}\n\nlet List = []\nconst count = 200;\n\nfor (let i = 0; i < count; i ++) {\n    List.push(\n        Mock.mock({\n            id: Mock.Random.guid(),\n            name: Mock.Random.cname(),\n            addr: Mock.mock('@country(true)'),\n            'age|18-60':1,\n            birth: Mock.Random.date(),\n            sex: Mock.Random.integer(0, 1)\n        })\n    )\n}\n\n\nexport default {\n    /**\n     * 獲取列表\n     * 要帶參數 name, page, limit; name 可以不填,page, limit 有默認值\n     * @param name, page, limit\n     * @return {number} code\n     * @return {number} count\n     * @return {*[]} data\n     */\n    getUserList: config => {\n        const { name, page = 1, limit = 20 } = param2Obj(config.url);\n        console.log('name:' + name, 'page:' + page, '分頁大小limit:' +limit)\n        const mockList = List.filter(user => {\n            if(name && user.name.indexOf(name) === -1 && user.addr.indexOf(name) === -1)return false\n            return true\n        })\n        const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page -1))\n        return {\n            code: 20000,\n            count: mockList.length,\n            list: pageList\n        }\n    },\n    /**\n     * 增加用戶\n     * @param name, addr, age, birth, sex\n     * @return {number} \n     * @return {message: string} data\n     */\n    createUser: config => {\n        const { name, addr, age, birth, sex } = JSON.parse(config.body);\n        console.log(JSON.pares(config.body))\n        List.unshift({\n            id: Mock.Random.getColumnById(),\n            name: name,\n            addr: addr,\n            age: age,\n            birth: birth,\n            sex: sex\n        })\n        return {\n            code: 20000,\n            data: {\n                message: '添加成功'\n            }\n        }\n    },\n\n    /**\n     * 刪除用戶\n     * @param id\n     * @return {*}\n     */\n    deleteUser: config => {\n        const { id } = JSON.parse(config.body);\n        if(!id) {\n            return {\n                code: -999,\n                message: '參數不正確'\n            }\n        } else {\n            List = List.filter(u => u.id !== id)\n            return {\n                code: 20000,\n                message: '刪除成功'\n            }\n        }\n    },\n    /**\n     * 批量刪除\n     * @param config\n     * @return {number} \n     * @return {message: string} data\n     */\n    batchremove: config => {\n        let { ids } = param2Obj(config.url);\n        ids = ids.split(',');\n        List = List.filter(u => !ids.includes(u.id));\n        return {\n            code: 20000,\n            data: {\n                message: '批量刪除成功'\n            }\n        }\n    },\n    /**\n     * 修改用戶\n     * @param id, name, addr, age, birth. sex\n     * @return {number} \n     * @return {message: string} data\n     */\n    updateUser: config => {\n        const { id, name, addr, age, birth, sex } = JSON.pare(config.body);\n        const sex_num = parseInt(sex);\n        List.some(u=> {\n            if (u.id === id) {\n                u.name = name;\n                u.addr = addr;\n                u.age = age;\n                u.birth = birth;\n                u.sex = sex_num;\n            }\n        })\n        return {\n            code: 20000,\n            data: {\n                message: '編輯成功'\n            }\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}